note :- video,audio,image,

--> FOR VIDEO TAGS AND USES .....

     src: Specifies the path to the video file.
     controls: Adds video controls, like play, pause, and volume.
     autoplay: Automatically starts playing the video when the page loads.
     loop: Repeats the video once it ends.
     muted: Mutes the video by default.
     poster: Specifies an image to be displayed before the video starts playing (for video thumbnail).
     width and height: Specifies the dimensions of the video.

--> FOR AUDIO TAG AND USES....

    src: Specifies the path to the audio file.
    controls: Adds audio controls, like play, pause, and volume.
    autoplay: Automatically starts playing the audio when the page loads.
    loop: Repeats the audio once it ends.
    muted: Mutes the audio by default.
    preload: Specifies if and how the audio should be loaded when the page loads 
             ('auto', 'metadata', 'none').
 
         The "preload" attribute can have the following values:

         none: This is the default value. It indicates that the browser should not preload 
               the audio file at all. The audio file will only start downloading when the user 
               initiates playback.

         metadata: This value tells the browser to preload only the metadata of the audio file, 
                   such as its duration and basic information about the audio.This can be useful if 
                   you want to display the audio duration to the user without fully loading 
                   the audio data.

         auto: This value instructs the browser to preload the entire audio file as much as possible
               without delaying the loading of other important page content. The browser will try to 
               load the audio file in the background so that it's ready to play when the user decides 
               to start it. 

--> SVG ...
    SVG in HTML :-Scalable Vector Graphics (SVG) has become an indispensable part of modern web development. 
                  SVG enables developers to create high-quality, scalable graphics that look crisp at any size
                 or resolution. In this blog post, we'll explore the basics of using SVG in HTML, its benefits,
                  and some practical examples.

    What is SVG? :- SVG stands for Scalable Vector Graphics. Unlike raster images like PNGs or JPGs, SVGs are 
                    not pixel-based. They're composed of vectorsâ€”mathematical formulas that describe shapes, 
                    paths, and fills. This means SVGs can be resized without losing quality.

    Why Use SVG?
           Scalability :-SVG images can be scaled indefinitely without losing quality, which is ideal for responsive
                         web design.
                     

    File Size :- SVG files are often smaller than their raster counterparts, especially for simple shapes and icons.


    Flexibility :-SVGs can be styled, animated, and manipulated using CSS and JavaScript.


    How to Embed SVG in HTML
            
              SVG can be embedded in HTML in several ways:


               1.Inline SVG: Directly writing the SVG XML code within HTML.
               2.Using an <img> tag: Point the src attribute to an SVG file.
               3.Using CSS: Setting SVG as a background image in a CSS file.

    Inline SVG Example
                           <svg height="100" width="100">
                                <circle cx="50" cy="50" r="40" stroke="black" stroke-width="3" fill="red" />
                           </svg>
     <img> Tag Example
                            <img src="image.svg" alt="Sample SVG">
     
     CSS Background Example
                            .background {
                                 background-image: url('image.svg');
                            }
     
     SVG Attributes :- 
          
          SVG comes with a set of attributes to control its behavior:
             
              1.width and height: To set the dimensions.
              2.viewBox: To set the coordinate system.
              3.fill and stroke: To set the colors.

      Creating Complex Shapes :-  SVG can also be used to create more complex shapes like polygons, lines, and text.
                  
--> 